---
openapi: 3.0.1
info:
  title: Library Management System API
  version: v1
  description: API for managing library books, borrowings, and users with JWT authentication
  contact:
    name: API Support
    email: support@library.com
paths:
  "/api/v1/auth/sign_up":
    post:
      summary: Register a new user
      tags:
      - Authentication
      parameters: []
      responses:
        '201':
          description: user created
          headers:
            Authorization:
              schema:
                type: string
              description: JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    "$ref": "#/components/schemas/User"
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                    password:
                      type: string
                      format: password
                    password_confirmation:
                      type: string
                      format: password
                    role:
                      type: string
                      enum:
                      - member
                      - librarian
                      default: member
                  required:
                  - email
                  - password
                  - password_confirmation
  "/api/v1/auth/sign_in":
    post:
      summary: Sign in
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: signed in successfully
          headers:
            Authorization:
              schema:
                type: string
              description: JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: invalid credentials
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                    password:
                      type: string
                      format: password
                  required:
                  - email
                  - password
  "/api/v1/auth/sign_out":
    delete:
      summary: Sign out
      tags:
      - Authentication
      security:
      - Bearer: []
      responses:
        '200':
          description: signed out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: not authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  "/api/v1/books":
    get:
      summary: List all books
      tags:
      - Books
      security:
      - Bearer: []
      parameters:
      - name: page
        in: query
        required: false
        description: Page number
        schema:
          type: integer
      - name: items
        in: query
        required: false
        description: Items per page
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  books:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Book"
                  pagination:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      per_page:
                        type: integer
                      total_count:
                        type: integer
                      total_pages:
                        type: integer
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    post:
      summary: Create a book
      tags:
      - Books
      security:
      - Bearer: []
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Book"
        '403':
          description: forbidden - only librarians can create books
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                book:
                  type: object
                  properties:
                    title:
                      type: string
                    author:
                      type: string
                    genre:
                      type: string
                    isbn:
                      type: string
                    total_copies:
                      type: integer
                    available_copies:
                      type: integer
                  required:
                  - title
                  - author
                  - genre
                  - isbn
                  - total_copies
                  - available_copies
  "/api/v1/books/{id}":
    parameters:
    - name: id
      in: path
      description: Book ID
      required: true
      schema:
        type: integer
    get:
      summary: Show a book
      tags:
      - Books
      security:
      - Bearer: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Book"
        '404':
          description: book not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
    patch:
      summary: Update a book
      tags:
      - Books
      security:
      - Bearer: []
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Book"
        '403':
          description: forbidden - only librarians can update books
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                book:
                  type: object
                  properties:
                    title:
                      type: string
                    author:
                      type: string
                    genre:
                      type: string
                    isbn:
                      type: string
                    total_copies:
                      type: integer
                    available_copies:
                      type: integer
    delete:
      summary: Delete a book
      tags:
      - Books
      security:
      - Bearer: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          description: forbidden - only librarians can delete books
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
servers:
- url: http://localhost:3000
  description: Development server
- url: https://{defaultHost}
  description: Production server
  variables:
    defaultHost:
      default: api.library.com
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from /api/v1/auth/sign_in
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
      required:
      - error
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        role:
          type: string
          enum:
          - member
          - librarian
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Book:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        author:
          type: string
        genre:
          type: string
        isbn:
          type: string
        total_copies:
          type: integer
        available_copies:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Borrowing:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        book_id:
          type: integer
        borrowed_at:
          type: string
          format: date-time
        due_date:
          type: string
          format: date-time
        returned_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
